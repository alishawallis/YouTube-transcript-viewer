{"ast":null,"code":"var _jsxFileName = \"G:\\\\Youtube transcript viewer\\\\src\\\\youtube-transcript.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Copy } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubeTranscriptViewer = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [transcript, setTranscript] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      // This is a mock API call - replace with your actual backend endpoint\n      const mockTranscript = `This is a sample transcript.\nIt would contain the actual YouTube video transcript.\nMultiple lines of text would appear here.\nRetrieved from your Python backend using youtube-transcript-api.`;\n\n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setTranscript(mockTranscript);\n    } catch (err) {\n      setError('Failed to fetch transcript. Please check the URL and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(transcript);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl mx-auto p-6 space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-3xl font-semibold text-gray-900\",\n        children: \"YouTube Transcript Viewer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-2 text-gray-600\",\n        children: \"Enter a YouTube URL to get its transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"relative\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"url\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          placeholder: \"https://www.youtube.com/watch?v=...\",\n          className: \"w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: `w-full py-3 px-4 rounded-lg text-white font-medium transition-all\n            ${loading ? 'bg-gray-400 cursor-not-allowed' : 'bg-blue-500 hover:bg-blue-600 active:bg-blue-700'}`,\n        children: loading ? 'Getting Transcript...' : 'Get Transcript'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-red-50 border border-red-200 rounded-lg text-red-700\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-4 right-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyToClipboard,\n          className: \"p-2 rounded-full hover:bg-gray-100 transition-colors\",\n          title: \"Copy transcript\",\n          children: /*#__PURE__*/_jsxDEV(Copy, {\n            className: \"w-5 h-5 text-gray-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"p-6 bg-white border border-gray-200 rounded-lg shadow-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          className: \"whitespace-pre-wrap font-sans text-gray-700\",\n          children: transcript\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(YouTubeTranscriptViewer, \"3D5TzReXmENheIp81O2SYhhDZF4=\");\n_c = YouTubeTranscriptViewer;\nexport default YouTubeTranscriptViewer;\nvar _c;\n$RefreshReg$(_c, \"YouTubeTranscriptViewer\");","map":{"version":3,"names":["React","useState","Copy","jsxDEV","_jsxDEV","YouTubeTranscriptViewer","_s","url","setUrl","transcript","setTranscript","loading","setLoading","error","setError","handleSubmit","e","preventDefault","mockTranscript","Promise","resolve","setTimeout","err","copyToClipboard","navigator","clipboard","writeText","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","disabled","onClick","title","_c","$RefreshReg$"],"sources":["G:/Youtube transcript viewer/src/youtube-transcript.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Copy } from 'lucide-react';\n\nconst YouTubeTranscriptViewer = () => {\n  const [url, setUrl] = useState('');\n  const [transcript, setTranscript] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    \n    try {\n      // This is a mock API call - replace with your actual backend endpoint\n      const mockTranscript = `This is a sample transcript.\nIt would contain the actual YouTube video transcript.\nMultiple lines of text would appear here.\nRetrieved from your Python backend using youtube-transcript-api.`;\n      \n      // Simulate API delay\n      await new Promise(resolve => setTimeout(resolve, 1000));\n      setTranscript(mockTranscript);\n    } catch (err) {\n      setError('Failed to fetch transcript. Please check the URL and try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const copyToClipboard = async () => {\n    try {\n      await navigator.clipboard.writeText(transcript);\n    } catch (err) {\n      console.error('Failed to copy text:', err);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl mx-auto p-6 space-y-6\">\n      {/* Header */}\n      <header className=\"text-center\">\n        <h1 className=\"text-3xl font-semibold text-gray-900\">YouTube Transcript Viewer</h1>\n        <p className=\"mt-2 text-gray-600\">Enter a YouTube URL to get its transcript</p>\n      </header>\n\n      {/* Input Form */}\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div className=\"relative\">\n          <input\n            type=\"url\"\n            value={url}\n            onChange={(e) => setUrl(e.target.value)}\n            placeholder=\"https://www.youtube.com/watch?v=...\"\n            className=\"w-full px-4 py-3 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-transparent outline-none transition-all\"\n            required\n          />\n        </div>\n        <button\n          type=\"submit\"\n          disabled={loading}\n          className={`w-full py-3 px-4 rounded-lg text-white font-medium transition-all\n            ${loading \n              ? 'bg-gray-400 cursor-not-allowed' \n              : 'bg-blue-500 hover:bg-blue-600 active:bg-blue-700'\n            }`}\n        >\n          {loading ? 'Getting Transcript...' : 'Get Transcript'}\n        </button>\n      </form>\n\n      {/* Error Message */}\n      {error && (\n        <div className=\"p-4 bg-red-50 border border-red-200 rounded-lg text-red-700\">\n          {error}\n        </div>\n      )}\n\n      {/* Transcript Display */}\n      {transcript && (\n        <div className=\"relative mt-8\">\n          <div className=\"absolute top-4 right-4\">\n            <button\n              onClick={copyToClipboard}\n              className=\"p-2 rounded-full hover:bg-gray-100 transition-colors\"\n              title=\"Copy transcript\"\n            >\n              <Copy className=\"w-5 h-5 text-gray-600\" />\n            </button>\n          </div>\n          <div className=\"p-6 bg-white border border-gray-200 rounded-lg shadow-sm\">\n            <pre className=\"whitespace-pre-wrap font-sans text-gray-700\">\n              {transcript}\n            </pre>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default YouTubeTranscriptViewer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}